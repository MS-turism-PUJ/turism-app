services:
  registry:
    build: ./registry
    ports:
      - 8761:8761
    restart: always
    container_name: registry
  config_server:
    build: ./config-server
    ports:
      - 8888:8888
    restart: always
    container_name: config-server
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.5
    ports:
      - 9000:8080
    restart: always
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command: start-dev --import-realm --optimized
    volumes:
      - ./keycloak/data:/opt/keycloak/data
      - ./keycloak:/opt/keycloak/data/import
    env_file:
      - .env
  users_db:
    image: postgres:14-alpine
    user: postgres
    restart: always
    healthcheck:
      test: "pg_isready -U ${DB_USER} --dbname=${USERS_DB_NAME}"
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: users_db
    ports:
      - ${USERS_DB_PORT}:5432
    environment:
      POSTGRES_DB: ${USERS_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - users_db_volume:/var/lib/postgresql/data
    env_file:
      - .env
  services_db:
    image: postgres:14-alpine
    user: postgres
    restart: always
    healthcheck:
      test: "pg_isready -U ${DB_USER} --dbname=${SERVICES_DB_NAME}"
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: services_db
    ports:
      - ${SERVICES_DB_PORT}:5432
    environment:
      POSTGRES_DB: ${SERVICES_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - services_db_volume:/var/lib/postgresql/data
    env_file:
      - .env
  marketplace_db:
    image: postgres:14-alpine
    user: postgres
    restart: always
    healthcheck:
      test: "pg_isready -U ${DB_USER} --dbname=${MARKETPLACE_DB_NAME}"
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: marketplace_db
    ports:
      - ${MARKETPLACE_DB_PORT}:5432
    environment:
      POSTGRES_DB: ${MARKETPLACE_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - marketplace_db_volume:/var/lib/postgresql/data
    env_file:
      - .env
  gateway:
    build: ./gateway
    ports:
      - 8080:8080
    restart: always
    container_name: gateway
    depends_on:
      - config_server
      - registry
  webapp:
    build: ./webapp
    ports:
      - 80:80
    restart: always
    container_name: webapp
  prometheus:
    image: prom/prometheus:v2.54.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:11.2.0-ubuntu
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    restart: always
    volumes:
      - ./grafana/data:/var/lib/grafana

volumes:
  users_db_volume:
  services_db_volume:
  marketplace_db_volume:
