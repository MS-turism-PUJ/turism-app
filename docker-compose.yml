services:
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.5
    ports:
      - 9000:8080
    restart: always
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command: start-dev --import-realm --optimized
    volumes:
      - keycloak_data_volume:/opt/keycloak/data
      - ./keycloak:/opt/keycloak/data/import
    env_file:
      - .env
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
  users_db:
    image: postgres:14-alpine
    user: ${DB_USER}
    restart: always
    healthcheck:
      test: "pg_isready -U ${DB_USER} --dbname=${USERS_DB_NAME}"
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: users_db
    ports:
      - ${USERS_DB_PORT}:5432
    environment:
      POSTGRES_DB: ${USERS_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - users_db_volume:/var/lib/postgresql/data
    env_file:
      - .env
  services_db:
    image: postgres:14-alpine
    user: ${DB_USER}
    restart: always
    healthcheck:
      test: "pg_isready -U ${DB_USER} --dbname=${SERVICES_DB_NAME}"
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: services_db
    ports:
      - ${SERVICES_DB_PORT}:5432
    environment:
      POSTGRES_DB: ${SERVICES_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - services_db_volume:/var/lib/postgresql/data
    env_file:
      - .env
  marketplace_db:
    image: postgres:14-alpine
    user: ${DB_USER}
    restart: always
    healthcheck:
      test: "pg_isready -U ${DB_USER} --dbname=${MARKETPLACE_DB_NAME}"
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: marketplace_db
    ports:
      - ${MARKETPLACE_DB_PORT}:5432
    environment:
      POSTGRES_DB: ${MARKETPLACE_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - marketplace_db_volume:/var/lib/postgresql/data
    env_file:
      - .env
  prometheus:
    image: prom/prometheus:v2.54.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_volume:/prometheus
    ports:
      - 9090:9090
    restart: always
    container_name: prometheus
  grafana:
    image: grafana/grafana:11.2.0-ubuntu
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    restart: always
    volumes:
      - grafana_data_volume:/var/lib/grafana
    container_name: grafana

volumes:
  users_db_volume:
  services_db_volume:
  marketplace_db_volume:
  keycloak_data_volume:
  prometheus_data_volume:
  grafana_data_volume:
  zookeeper_data:
  kafka_data:
